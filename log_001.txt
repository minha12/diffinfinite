/home/x_lemin/.conda/envs/diffinf/lib/python3.10/site-packages/diffusers/models/modeling_utils.py:107: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(checkpoint_file, map_location="cpu")
/home/x_lemin/.conda/envs/diffinf/lib/python3.10/site-packages/transformers/modeling_utils.py:446: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(checkpoint_file, map_location="cpu")
Loading config from: config/test.yaml

=== Final Configuration [main()] ===
UNet config:
  image_size: 512
  dim: 256
  num_classes: 5
  dim_mults: [1, 2, 4]
  channels: 4
  resnet_block_groups: 2
  block_per_layer: 2

Diffusion config:
  data_folder: ../pathology-datasets/DRSK/full_dataset/labeled-data
  timesteps: 1000
  sampling_timesteps: 250
  batch_size: 4
  lr: 0.0001
  train_num_steps: 2
  save_sample_every: 2
  gradient_accumulate_every: 1
  save_milestone_every: 1000
  save_loss_every: 2
  num_samples: 4
  num_workers: 16
  results_folder: ./logs/short_test
  milestone: None
  extra_data_path: ../pathology-datasets/DRSK/full_dataset/unconditional-data
  debug: True

=== Model Summary [main()] ===
Total parameters: 172,101,124
Trainable parameters: 172,101,124
Input channels: 4
Number of classes: 5
Model dimension: 256
Dimension multipliers: [1, 2, 4]

=== Dataset Import [import_dataset()] ===
Data path: ../pathology-datasets/DRSK/full_dataset/labeled-data
Batch size: 4
Extra data path: ../pathology-datasets/DRSK/full_dataset/unconditional-data

=== Dataset Splitting [split_dataset()] ===
Data path: ../pathology-datasets/DRSK/full_dataset/labeled-data
Train size: 0.9
Train set summary: [58389, 58041, 38244, 36493, 41360]
Test set summary: [6488, 6450, 4250, 4055, 4596]

=== Dataset Init [DatasetLung.__init__()] ===
Data path: ../pathology-datasets/DRSK/full_dataset/labeled-data
Class 0: 58389 samples
Class 1: 58041 samples
Class 2: 38244 samples
Class 3: 36493 samples
Class 4: 41360 samples

=== Cutoff Probabilities [DatasetLung._cutoffs()] ===
Number of classes: 5
Conditional drop probability: 0.5
Individual probabilities: [0.5, 0.125, 0.125, 0.125, 0.125]
Cutoff probabilities: [0.5, 0.625, 0.75, 0.875, 1.0]

=== Dataset Init [DatasetLung.__init__()] ===
Data path: ../pathology-datasets/DRSK/full_dataset/labeled-data
Class 0: 6488 samples
Class 1: 6450 samples
Class 2: 4250 samples
Class 3: 4055 samples
Class 4: 4596 samples

=== Cutoff Probabilities [DatasetLung._cutoffs()] ===
Number of classes: 5
Conditional drop probability: 1.0
Individual probabilities: [0.0, 0.25, 0.25, 0.25, 0.25]
Cutoff probabilities: [0.0, 0.25, 0.5, 0.75, 1.0]
  0%|          | 0/2 [00:00<?, ?it/s]loss: 1.1548:   0%|          | 0/2 [00:01<?, ?it/s]loss: 1.1548:  50%|█████     | 1/2 [00:01<00:01,  1.32s/it]loss: 2.6852:  50%|█████     | 1/2 [00:01<00:01,  1.32s/it]loss: 2.6852: 100%|██████████| 2/2 [01:15<00:00, 44.18s/it]loss: 2.6852: 100%|██████████| 2/2 [01:15<00:00, 37.76s/it]

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.6966843605041504
Selected class index: 2
Class size: 38244
Selected sample index: 28659

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/5b2086dc6d02f0c7941157d247fcd3fb66ae24b2c38bdfb850a56408d3483846.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [5, 255]
  Mean: 181.72
  Std: 52.81

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 263
    1: 109
    2: 129896
    3: 3049
    4: 128827

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.5640656352043152
Selected class index: 1
Class size: 58041
Selected sample index: 20007

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/fa35219157efd10d241f581fa6e53568a2300d535425dfcb11d42d01f57665c1.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [4, 255]
  Mean: 188.88
  Std: 50.83

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 369
    1: 152
    2: 129791
    3: 2667
    4: 129165

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.1103750467300415
Selected class index: 0
Class size: 214413
Selected sample index: 128950

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/unconditional-data/7d4a7c5de7e90de480376d36f1e11f40f345deb6def37b60bacf5860d17de4b4.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [0, 255]
  Mean: 200.45
  Std: 49.93

No mask found - using zero mask

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.19160610437393188
Selected class index: 0
Class size: 214413
Selected sample index: 198163

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/unconditional-data/17b98a1fc71fd98a5a004092562ce139a95d1ed6772a70d72877ce251bdef523.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [0, 255]
  Mean: 98.31
  Std: 56.22

No mask found - using zero mask

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.17783689498901367
Selected class index: 0
Class size: 214413
Selected sample index: 54391

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/4983bb316ea78b1d94b7ff3d0480257593c4a0b10a38c4f3afd670c3922c2cf0.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [0, 255]
  Mean: 176.75
  Std: 47.13

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1]
  Value counts:
    0: 233499
    1: 28645

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.1717534065246582
Selected class index: 0
Class size: 214413
Selected sample index: 191188

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/unconditional-data/a89e3c9d1b6cb0e059d10002111ad6e839ff4db151224bed84464587a10b0143.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [3, 255]
  Mean: 179.12
  Std: 50.86

No mask found - using zero mask

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.8094722032546997
Selected class index: 3
Class size: 36493
Selected sample index: 27869

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/99cd44162ed7ef6dbdf06416472175ca896bfb220415753ef0c6f3b3f70a15f2.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [8, 255]
  Mean: 188.37
  Std: 59.62

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 2845
    1: 69621
    2: 637
    3: 4005
    4: 185036

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.3444804549217224
Selected class index: 0
Class size: 214413
Selected sample index: 123622

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/unconditional-data/d207b028c489ad13cdb61d94d3221fea13a246cc9830f2b431df407cc6abfbe5.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [0, 255]
  Mean: 146.49
  Std: 53.40

No mask found - using zero mask

=== Training Loop Image Details [Trainer.train_loop()] ===
Input images metadata:
  Shape: torch.Size([4, 3, 512, 512])
  Dtype: torch.float32
  Device: cuda:0
  Value range: [0.00, 1.00]
  Mean: 0.66
  Std: 0.26

Input masks metadata:
  Shape: torch.Size([4, 1, 512, 512])
  Dtype: torch.int32
  Device: cuda:0
  Unique values: [0, 1, 2, 3, 4]
  Value counts:
    0: 524920
    1: 261
    2: 259687
    3: 5716
    4: 257992

=== Diffusion Step Info [GaussianDiffusion.p_losses()] ===
Input shape: torch.Size([4, 4, 64, 64])
Input dtype: torch.float32
Timestep: tensor([461, 266, 576, 891], device='cuda:0')
Size of masks: torch.Size([4, 1, 512, 512])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0033e-03, 4.1580e-04, 4.9551e-01, 1.1631e-02, 4.9144e-01],
        [1.4076e-03, 5.7983e-04, 4.9511e-01, 1.0174e-02, 4.9273e-01],
        [1.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [1.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0400, -0.0599, -0.1403,  ..., -0.1012, -0.0055,  0.1112],
        [-0.0405, -0.0598, -0.1406,  ..., -0.1015, -0.0061,  0.1115],
        [-0.2366,  0.3956,  0.0331,  ...,  0.1988, -0.1759, -0.1818],
        [-0.2366,  0.3956,  0.0331,  ...,  0.1988, -0.1759, -0.1818]],
       device='cuda:0', grad_fn=<AddmmBackward0>)
=== Model Predictions [GaussianDiffusion.p_losses()] ===
Predicted noise shape: torch.Size([4, 4, 64, 64])
Target noise shape: torch.Size([4, 4, 64, 64])

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.4481733441352844
Selected class index: 0
Class size: 214413
Selected sample index: 95408

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/unconditional-data/04af4bf23083c26a8a85052e2c2038b2583373d754ed8b77c2e8ea2022438365.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [0, 255]
  Mean: 182.56
  Std: 52.15

No mask found - using zero mask

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.9344868063926697
Selected class index: 4
Class size: 41360
Selected sample index: 4683

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/cbc2aa860a2b6a3102b1f5667f6340e9e414181d127dd8206d1b91ae497b7d20.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [1, 255]
  Mean: 184.49
  Std: 50.75

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 6201
    1: 2233
    2: 57622
    3: 5360
    4: 190728

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.25296586751937866
Selected class index: 0
Class size: 214413
Selected sample index: 23301

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/7ccaa9b85492c4d120742b16aadc273c9c0af5b9b162bffb18a404b0e99cba43.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [8, 255]
  Mean: 194.38
  Std: 50.71

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1]
  Value counts:
    0: 179753
    1: 82391

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.6863340735435486
Selected class index: 2
Class size: 38244
Selected sample index: 30359

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/fd9f6cba584bb10b65997188b9a0e4ac9402897607ede51892539ebc24dc9f45.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [2, 255]
  Mean: 177.79
  Std: 53.70

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 455
    1: 230
    2: 327
    3: 1643
    4: 259489

=== Training Loop Image Details [Trainer.train_loop()] ===
Input images metadata:
  Shape: torch.Size([4, 3, 512, 512])
  Dtype: torch.float32
  Device: cuda:0
  Value range: [0.00, 1.00]
  Mean: 0.68
  Std: 0.22

Input masks metadata:
  Shape: torch.Size([4, 1, 512, 512])
  Dtype: torch.int32
  Device: cuda:0
  Unique values: [0, 1, 2, 3, 4]
  Value counts:
    0: 760632
    1: 98266
    2: 637
    3: 4005
    4: 185036

=== Diffusion Step Info [GaussianDiffusion.p_losses()] ===
Input shape: torch.Size([4, 4, 64, 64])
Input dtype: torch.float32
Timestep: tensor([196, 852, 118,  98], device='cuda:0')
Size of masks: torch.Size([4, 1, 512, 512])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.8907, 0.1093, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0109, 0.2656, 0.0024, 0.0153, 0.7059],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.1858,  0.3369,  0.0613,  ...,  0.1365, -0.1219, -0.2329],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0472, -0.0400, -0.0832,  ..., -0.1863,  0.0800, -0.0518],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0', grad_fn=<AddmmBackward0>)
=== Model Predictions [GaussianDiffusion.p_losses()] ===
Predicted noise shape: torch.Size([4, 4, 64, 64])
Target noise shape: torch.Size([4, 4, 64, 64])

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.7686400413513184
Selected class index: 4
Class size: 4596
Selected sample index: 2247

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/7cad1c778618ad45e661563a628d7ed284f5df6ea064d909fd21d60c2f2115a1.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [9, 255]
  Mean: 187.94
  Std: 43.90

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 710
    1: 253
    2: 194796
    3: 3634
    4: 62751

=== Transformed Image Details [DatasetLung.__getitem__()] ===
Image tensor metadata:
  Shape: torch.Size([3, 512, 512])
  Dtype: torch.float32
  Device: cpu
  Value range: [0.04, 1.00]
  Mean: 0.74
  Std: 0.17

Mask tensor metadata:
  Shape: torch.Size([1, 512, 512])
  Dtype: torch.int32
  Device: cpu
  Unique values: [0, 1, 2, 3, 4]
  Value counts:
    0: 710
    1: 253
    2: 194796
    3: 3634
    4: 62751

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.9465223550796509
Selected class index: 4
Class size: 4596
Selected sample index: 638

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/de1ac5b4442243bfa7801476b94f94cd3a01b4e2c7d28a947f380e7314a6fd36.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [6, 255]
  Mean: 204.08
  Std: 38.43

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [2 3 4]
  Value counts:
    2: 238694
    3: 475
    4: 22975

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.3183025121688843
Selected class index: 2
Class size: 4250
Selected sample index: 2845

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/074bc50b0ec6a89530080c915b35e9be2698f9a7245985ffa4062bfbce7b9bb2.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [14, 255]
  Mean: 199.38
  Std: 34.40

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 647
    1: 310
    2: 76505
    3: 176034
    4: 8648

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.5653910636901855
Selected class index: 3
Class size: 4055
Selected sample index: 1694

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/82c361e55a024b68903ea2245f8b624165ac6dc9ba3a500bc72c08e9ab03570a.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [16, 255]
  Mean: 154.43
  Std: 39.97

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 3]
  Value counts:
    0: 948
    1: 819
    3: 260377

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.6175041198730469
Selected class index: 3
Class size: 4055
Selected sample index: 3437

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/977ddb243eb13f51eb2c670cf8cdef1bcdcddff6df915ebcee8f5d5a0222f53f.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [6, 255]
  Mean: 197.01
  Std: 41.61

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 1309
    1: 348
    2: 191121
    3: 1392
    4: 67974

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.8474088311195374
Selected class index: 4
Class size: 4596
Selected sample index: 2569

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/aad90c5d06f00513efe053928ef0cce605acefe5cd9081e4a12dd8af454fcbd1.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [10, 255]
  Mean: 189.66
  Std: 42.97

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 1899
    1: 719
    2: 544
    3: 2310
    4: 256672

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.2082613706588745
Selected class index: 1
Class size: 6450
Selected sample index: 84

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/afc9d92c6a3369fcee4e4021d18350437036e0af39495f8be1c753b3a8851557.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [4, 255]
  Mean: 190.13
  Std: 54.38

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 66340
    1: 568
    2: 56
    3: 673
    4: 194507

=== Data Selection Details [DatasetLung.unbalanced_data()] ===
Selected rand num: 0.5702189803123474
Selected class index: 3
Class size: 4055
Selected sample index: 1704

=== Image Loading Details [DatasetLung.unbalanced_data()] ===
Image path: ../pathology-datasets/DRSK/full_dataset/labeled-data/3da985c3b0ad874835dff12f108826449ea750877c857638f89daf51e2270ed3.jpg
Image metadata:
  Shape: (512, 512, 3)
  Dtype: uint8
  Value range: [17, 255]
  Mean: 189.91
  Std: 45.99

Mask metadata:
  Shape: (512, 512)
  Dtype: uint8
  Unique values: [0 1 2 3 4]
  Value counts:
    0: 3381
    1: 781
    2: 104416
    3: 2797
    4: 150769
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0842, 0.0000, 0.9158, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [ 0.0190, -0.0958,  0.0291,  ...,  0.0502,  0.0238, -0.0089],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9585e-01, 0.0000e+00, 0.0000e+00, 4.1504e-03, 0.0000e+00],
        [9.9951e-01, 4.8828e-04, 0.0000e+00, 0.0000e+00, 0.0000e+00],
        [9.9854e-01, 1.4648e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00]],
       device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2518,  0.3806,  0.0381,  ...,  0.1703, -0.1659, -0.1969],
        [-0.2547,  0.3818,  0.0384,  ...,  0.1708, -0.1675, -0.1984],
        [-0.2542,  0.3815,  0.0387,  ...,  0.1705, -0.1672, -0.1988]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[0.2605, 0.0000, 0.7395, 0.0000, 0.0000],
        [0.9199, 0.0000, 0.0000, 0.0000, 0.0801],
        [0.7075, 0.0000, 0.2925, 0.0000, 0.0000],
        [0.0068, 0.0000, 0.0000, 0.9932, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.0187, -0.0607,  0.0088,  ...,  0.0639, -0.0087, -0.0600],
        [-0.2386,  0.3409,  0.0182,  ...,  0.1513, -0.1434, -0.1707],
        [-0.1407,  0.1543,  0.0090,  ...,  0.1150, -0.1091, -0.1557],
        [ 0.2806,  0.1462, -0.1583,  ..., -0.0682,  0.4768, -0.0809]],
       device='cuda:0')
Size of masks: torch.Size([4, 1, 64, 64])
Size of class_dist: torch.Size([4, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([4, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([4, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.9854, 0.0000, 0.0000, 0.0146, 0.0000],
        [0.3313, 0.0000, 0.0000, 0.6687, 0.0000]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2441,  0.3773,  0.0373,  ...,  0.1689, -0.1610, -0.1936],
        [ 0.1579,  0.1986, -0.0824,  ...,  0.0307,  0.2386, -0.0711]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[0.7573, 0.0000, 0.0000, 0.0000, 0.2427],
        [0.9656, 0.0000, 0.0000, 0.0000, 0.0344]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2078,  0.2562, -0.0202,  ...,  0.0981, -0.0939, -0.1126],
        [-0.2479,  0.3645,  0.0296,  ...,  0.1630, -0.1574, -0.1865]],
       device='cuda:0')
Size of masks: torch.Size([2, 1, 64, 64])
Size of class_dist: torch.Size([2, 5])
Value of classes distribution: tensor([[1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.]], device='cuda:0')
Size of weighted_emb: torch.Size([2, 256])
Size of classes_emb: torch.Size([5, 256])
Size of c: torch.Size([2, 1024])
Value of c: tensor([[-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982],
        [-0.2551,  0.3821,  0.0383,  ...,  0.1710, -0.1677, -0.1982]],
       device='cuda:0')

=== Generated Samples Details [Trainer.eval_loop()] ===
Test images metadata:
  Shape: torch.Size([4, 3, 512, 512])
  Dtype: torch.float32
  Device: cuda:0
  Value range: [0.02, 1.00]

Test masks metadata:
  Shape: torch.Size([4, 1, 512, 512])
  Dtype: torch.int32
  Device: cuda:0
  Unique values: [0, 1, 2, 3, 4]

Generated samples metadata:
  Shape: torch.Size([4, 3, 512, 512])
  Dtype: torch.float32
  Device: cuda:0
  Value range: [0.00, 1.00]
training complete
